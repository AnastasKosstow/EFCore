// <auto-generated />
using EFCore.Inheritance.TablePerType;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCore.Inheritance.TablePerType.Migrations
{
    [DbContext(typeof(TablePerTypeDbContext))]
    [Migration("20220815081303_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EFCore.Inheritance.TablePerType.Models.BillingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BillingDetails");
                });

            modelBuilder.Entity("EFCore.Inheritance.TablePerType.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BillingDetailId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillingDetailId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EFCore.Inheritance.TablePerType.Models.BankAccount", b =>
                {
                    b.HasBaseType("EFCore.Inheritance.TablePerType.Models.BillingDetail");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("BankAccounts", (string)null);
                });

            modelBuilder.Entity("EFCore.Inheritance.TablePerType.Models.CreditCard", b =>
                {
                    b.HasBaseType("EFCore.Inheritance.TablePerType.Models.BillingDetail");

                    b.Property<string>("CardType")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("CreditCards", (string)null);
                });

            modelBuilder.Entity("EFCore.Inheritance.TablePerType.Models.User", b =>
                {
                    b.HasOne("EFCore.Inheritance.TablePerType.Models.BillingDetail", "BillingInfo")
                        .WithMany()
                        .HasForeignKey("BillingDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingInfo");
                });

            modelBuilder.Entity("EFCore.Inheritance.TablePerType.Models.BankAccount", b =>
                {
                    b.HasOne("EFCore.Inheritance.TablePerType.Models.BillingDetail", null)
                        .WithOne()
                        .HasForeignKey("EFCore.Inheritance.TablePerType.Models.BankAccount", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCore.Inheritance.TablePerType.Models.CreditCard", b =>
                {
                    b.HasOne("EFCore.Inheritance.TablePerType.Models.BillingDetail", null)
                        .WithOne()
                        .HasForeignKey("EFCore.Inheritance.TablePerType.Models.CreditCard", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
